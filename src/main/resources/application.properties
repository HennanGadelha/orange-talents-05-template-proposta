#________________________________________________________________

#MYSQL
spring.datasource.url= jdbc:mysql://${MYSQL_HOST:localhost}:3306/${MYSQL_DATABASE:dbproposta}?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username= ${MYSQL_USER:root}
spring.datasource.password= ${MYSQL_PASSWORD:87499813}
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

#________________________________________________________________

#JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

#________________________________________________________________

#Feign analise propostas

zup.analise_financeira.url = ${ANALISE_PROPOSTA_URL:http://localhost:9999}
apiexternaanaliseproposta.request = ${ANALISE_PROPOSTA_REQUEST:/api/solicitacao}

#________________________________________________________________

#Feign associaçao cartao

api.associa.cartao=${ASSOCIA_CARTAO:http://localhost:8888}
api.busca.cartao=${BUSCA_CARTAO:/api/cartoes}

server.port=8081
#____________________________________________________________
# Actuator
info.app.name=@project.name@
info.app.version=@project.version@
management.endpoint.health.show-details=always

management.endpoints.enabled-by-default=true
management.endpoint.info.enabled=true
management.endpoint.health.enabled=true

#Prometheus
management.endpoints.prometheus.enabled=true
management.endpoints.web.exposure.include=info,health,prometheus

#________________________________________________________________

# health liveness and readiness
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

#________________________________________________________________


# security
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/apiproposta-realm}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/apiproposta-realm/protocol/openid-connect/certs}

#________________________________________________________________

spring.cloud.compatibility-verifier.enabled=false

#________________________________________________________________

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name:proposta}

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

opentracing.spring.cloud.jdbc.enabled=false

#________________________________________________________________

#Evitando exception:
#java.lang.NoClassDefFoundError
#org/springframework/cloud/openfeign/ribbon/LoadBalancerFeignClient

opentracing.spring.cloud.feign.enabled = false

#________________________________________________________________
spring.output.ansi.enabled=ALWAYS